#!/usr/bin/env bash
#
# Usage: exenv vars
#
# Prints all exenv-vars environment variables applicable to the
# current working directory in the order they will be set. The output
# format is a script that may be passed to `eval` in a Bourne-
# compatible shell.
#
# For more information on exenv-vars, see:
# https://github.com/exenv/exenv-vars#readme

set -e
[ -n "$RBENV_DEBUG" ] && set -x

if [ "$1" = "--version" ] || [ "$1" = "-v" ]; then
  echo "exenv-vars 1.0.0"
  exit
fi

traverse-exenv-vars-files() {
  local root="$1"
  local results=""

  while [ -n "$root" ]; do
    if [ -e "${root}/.exenv-vars" ]; then
      results="${root}/.exenv-vars"$'\n'"$results"
    fi
    root="${root%/*}"
  done

  if [ -n "$results" ]; then
    echo -n "$results"
  else
    return 1
  fi
}

find-exenv-vars-files() {
  if [ -e "${RBENV_ROOT}/vars" ]; then
    echo "${RBENV_ROOT}/vars"
  fi

  traverse-exenv-vars-files "$RBENV_DIR" ||
  [ "$RBENV_DIR" = "$PWD" ] || traverse-exenv-vars-files "$PWD"
}

sanitize-vars() {
  sed \
    -e "/^[ "$'\t'"]*[A-Za-z_][0-9A-Za-z_]*?\{0,1\}=/ !d" \
    -e "s/'/'\\\\''/g" \
    -e "s/\(\\\\\\\$\)/'\\1'/g" \
    -e "s/\\\\\\\\/\\\\/g" \
    -e "s/\(\\\$[0-9A-Za-z_][0-9A-Za-z_]*\)/'\\1'/g" \
    -e "s/\(\\\${[0-9A-Za-z_][0-9A-Za-z_]*}\)/'\\1'/g" \
    -e "s/^[ "$'\t'"]*\([A-Za-z_][0-9A-Za-z_]*?\{0,1\}\)=\(.*\)$/export \\1='\\2'/" \
    -e "s/export \([A-Za-z_][0-9A-Za-z_]*\)?=/[ -n \"\$\\1\" ] || export \\1=/g"
}

while read file; do
  echo "# $file"
  { cat "$file"; echo; } | sanitize-vars
  echo
done < <( find-exenv-vars-files )
